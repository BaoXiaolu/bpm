<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bxl.bpm.dao.DicMapper" >
  <resultMap id="BaseResultMap" type="com.bxl.bpm.model.Dic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="is_disable" property="isDisable" jdbcType="BIT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="creater" property="createrId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifierId" jdbcType="INTEGER" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, code, value, pid, category_id, remark, is_disable, sort, creater, create_time, 
    modifier, modified_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bxl.bpm.model.DicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_dic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_dic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bxl.bpm.model.DicExample" >
    delete from sys_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bxl.bpm.model.Dic" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      CALL GetSEQUENCE()
    </selectKey>
    insert into sys_dic (id, name, code, 
      value, pid, category_id, 
      remark, is_disable, sort, 
      creater, create_time, modifier, 
      modified_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{isDisable,jdbcType=BIT}, #{sort,jdbcType=INTEGER}, 
      #{createrId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=INTEGER}, 
      #{modifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bxl.bpm.model.Dic" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      CALL GetSEQUENCE()
    </selectKey>
    insert into sys_dic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isDisable != null" >
        is_disable,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createrId != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifierId != null" >
        modifier,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null" >
        #{isDisable,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null" >
        #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bxl.bpm.model.DicExample" resultType="java.lang.Integer" >
    select count(*) from sys_dic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_dic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisable != null" >
        is_disable = #{record.isDisable,jdbcType=BIT},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createrId != null" >
        creater = #{record.createrId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifierId != null" >
        modifier = #{record.modifierId,jdbcType=INTEGER},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_dic
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_disable = #{record.isDisable,jdbcType=BIT},
      sort = #{record.sort,jdbcType=INTEGER},
      creater = #{record.createrId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modifier = #{record.modifierId,jdbcType=INTEGER},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bxl.bpm.model.Dic" >
    update sys_dic
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDisable != null" >
        is_disable = #{isDisable,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        creater = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null" >
        modifier = #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bxl.bpm.model.Dic" >
    update sys_dic
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      is_disable = #{isDisable,jdbcType=BIT},
      sort = #{sort,jdbcType=INTEGER},
      creater = #{createrId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifierId,jdbcType=INTEGER},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>